package com.android.administrator.contacts_fuzhucheng.utils.db;

import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.android.administrator.contacts_fuzhucheng.R;
import com.android.administrator.contacts_fuzhucheng.ui.fragment.UserBean;
import com.android.administrator.contacts_fuzhucheng.utils.ViewHolder;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * Created by Administrator on 2016/4/23.
 */
public class MyAdapter extends BaseAdapter implements View.OnClickListener {
    private ArrayList<UserBean> data;
//    private  Map<String, Object> myData;
    private UserBean userBean;

    public void setData( ArrayList<UserBean> userBeanList){
        this.data = userBeanList;
        notifyDataSetChanged();
    }



    private LayoutInflater mInflater = null;

    public MyAdapter(Context context)
    {
        //根据context上下文加载布局，这里的是Demo17Activity本身，即this
        this.mInflater = LayoutInflater.from(context);
    }
    @Override
    public int getCount() {
        //How many items are in the data set represented by this Adapter.
        //在此适配器中所代表的数据集中的条目数
        return data.size();
    }
    @Override
    public Object getItem(int position) {
        // Get the data item associated with the specified position in the data set.
        //获取数据集中与指定索引对应的数据项,,给定索引值，得到索引值对应的对象
        return position;
    }
    @Override
    public long getItemId(int position) {
        //Get the row id associated with the specified position in the list.
        //获取在列表中与指定索引对应的行id,,,,, 获取条目id
        return position;
    }

    public void remove(int position){
        data.remove(position);
    }
    //Get a View that displays the data at the specified position in the data set.
    //获取一个在数据集中指定索引的视图来显示数据
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder = null;
        //如果缓存convertView为空，则需要创建View
        if(convertView == null)
        {
            holder = new ViewHolder();
            //根据自定义的Item布局加载布局
            convertView = mInflater.inflate(R.layout.item, null);
            holder.img = (ImageView)convertView.findViewById(R.id.image);
            holder.title = (TextView)convertView.findViewById(R.id.name);
            holder.info = (TextView)convertView.findViewById(R.id.mobilephone);
            convertView.setOnClickListener(this);


            //将设置好的布局保存到缓存中，并将其设置在Tag里，以便后面方便取出Tag
            convertView.setTag(holder);
        }else
        {
            holder = (ViewHolder)convertView.getTag();
        }
        holder.img.setBackgroundResource((Integer)data.get(position).getImg());
        holder.title.setText((String) data.get(position).getTitle());
        holder.info.setText((String) data.get(position).getInfo());

        convertView.setTag(123,position);
        return convertView;
    }

    @Override
    public void onClick(View v) {
        Object obj=v.getTag(123);
        final int index=Integer.valueOf(obj.toString());
        userBean = data.get(index);

        Log.e("xu", "userBean.getInfo()=="+userBean.getInfo());
        Log.e("xu", "userBean.getTitle()=="+userBean.getTitle());
        Log.e("xu", "userBean.getItem_Id()=="+userBean.getItem_Id());
        Log.e("xu", "userBean.getImg()=="+userBean.getImg());
//        uri = ContactsContract.Contacts.CONTENT_URI;
//        Uri personUri = ContentUris.withAppendedId(uri, position);
//        Intent intent2 = new Intent();
//        intent2.setAction(Intent.ACTION_VIEW);
//        intent2.setData(personUri);


    }
}